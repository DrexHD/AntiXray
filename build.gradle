plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "io.github.slimjar" version "1.3.0"
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url 'https://repo.vshnv.tech/' } // slimjar
}

loom {
    accessWidenerPath = file("src/main/resources/antixray.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings minecraft.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API
    Set<String> apiModules = [
            'fabric-api-base',
            'fabric-lifecycle-events-v1'
    ]
    apiModules.forEach {
        modImplementation(fabricApi.module(it, project.fabric_version))
    }

    implementation slimjar(project.slimjar_version)
    shadow slimjar(project.slimjar_version)

    slim "com.moandjiezana.toml:toml4j:${project.toml_version}"
    slim "io.netty:netty-all:${project.netty_version}"
}

shadowJar {
    archiveClassifier = "shadow"
    configurations = [project.configurations.shadow]
}

build.dependsOn shadowJar

task remapJar(type: net.fabricmc.loom.task.RemapJarTask, overwrite: true) {
    dependsOn shadowJar
    from zipTree(shadowJar.archiveFile)
    remapAccessWidener = true
}

processResources {
    inputs.property "version", project.version
    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 16
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}