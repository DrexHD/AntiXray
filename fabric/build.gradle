plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'idea'
}

archivesBaseName = "${rootProject.archives_base_name}-${rootProject.mod_version}-Fabric-${rootProject.minecraft_version}"

repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    implementation project(":common")
    include("com.moandjiezana.toml:toml4j:${rootProject.toml_version}")
    modCompileOnly ("com.github.iPortalTeam.ImmersivePortalsMod:imm_ptl_core:${rootProject.fabric_imm_ptl_core_version}"){
        exclude(group: "net.fabricmc.fabric-api")
        transitive(false)
    }
}

loom {
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
    accessWidenerPath.set(project(":fabric").file("src/main/resources/antixray.accesswidener"))
}


processResources {
    inputs.property "version", rootProject.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": rootProject.mod_version
    }
    from project(":common").sourceSets.main.resources
}

tasks.withType(JavaCompile) {
    source(project(":common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}